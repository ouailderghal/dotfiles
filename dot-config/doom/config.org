#+TITLE: Doom Emacs Configuration
#+AUTHOR: Ouail Derghal
#+STARTUP: fold

* General Config
#+begin_src elisp
(setq doom-theme 'doom-ir-black)
(setq display-line-numbers-type t)
(setq org-directory "~/org/")
#+end_src

* Fonts
** Setting Font Face
Set different Emacs font variables.

#+begin_src elisp
(setq
 doom-font (font-spec :family "Hack Nerd Font Mono" :size 14 :weight 'semi-light)
 doom-variable-pitch-font (font-spec :family "Hack Nerd Font" :size 14))
#+end_src

** Zoom In/Out
#+begin_src elisp
(map! :desc "Increase font size" "C-S-k" #'text-scale-increase)
(map! :desc "Decrease font size" "C-S-j" #'text-scale-decrease)
#+end_src

* General Keybindings
** Open =alacritty= in current directory
#+begin_src elisp
(map! :leader

      :after text-mode
      :desc "Open Alacritty in current directory" "!" #'od/run-alacritty-in-directory)

(defun od/run-alacritty-in-directory ()
  "Open Alacritty in the current working directory."
  (interactive)
  (let ((default-directory default-directory))
    (start-process "alacritty" nil "alacritty")))
#+end_src

** Clear shell buffer
#+begin_src elisp
(add-hook 'shell-mode-hook #'od/shell-mode-setup)

(defun od/shell-mode-setup ()
  "Custom setup for shell mode."
  (map! :map shell-mode-map
        :desc "Clear shell buffer" "C-l" #'comint-clear-buffer))

#+end_src

** Comment and uncomment a region
#+begin_src elisp
(map! :leader
      :after text-mode
      :desc "Comment region" "C-c" #'comment-region)

(map! :leader
      :after text-mode
      :desc "Uncomment region" "C-u" #'uncomment-region)
#+end_src

* Bibliography
TODO: Configuration =citar=.

* Shells and Terminals
** Set the default =vterm= shell
#+begin_src elisp
(setq vterm-shell "/bin/zsh")
#+end_src

* Directory Editor
** Open PDF files using =evince=
#+begin_src elisp
(map! :map dired-mode-map
      :localleader
      :desc "Open PDF with Evince" "e" #'od/open-pdf-with-evince)

(defun od/open-pdf-with-evince ()
  "Open the selected PDF file in Evince."
  (interactive)
  (let ((file (dired-get-file-for-visit)))
    (if (string-suffix-p ".pdf" file)
        (start-process "evince" nil "evince" file)
      (message "Not a PDF file"))))
#+end_src

** Open HTML files using =firefox=
#+begin_src elisp
(map! :map dired-mode-map
      :localleader
      :desc "Open HTML with Firefox" "f" #'od/open-html-with-firefox)

(defun od/open-html-with-firefox ()
  "Open the selected PDF file in Evince."
  (interactive)
  (let ((file (dired-get-file-for-visit)))
    (if (string-suffix-p ".html" file)
        (start-process "firefox" nil "firefox" file)
      (message "Not a HTML file"))))
#+end_src

* =mu4e=
** Gloabl config
#+begin_src elisp
(setq mu4e-verify-signature t)
(setq mu4e-decryption-policy 'ask)
(setq mm-verify-option 'always)

(after! mu4e
       (add-hook 'message-send-hook 'mml-secure-message-sign-pgpmime))

(after! mu4e
  (setq sendmail-program (executable-find "msmtp")
	send-mail-function #'smtpmail-send-it
	message-sendmail-f-is-evil t
	message-sendmail-extra-arguments '("--read-envelope-from")
	message-send-mail-function #'message-send-mail-with-sendmail))
#+end_src

** Mailboxes
*** =IMTA=
#+begin_src elisp
(set-email-account! "IMTA"
  '((mu4e-sent-folder       . "/imt/Sent")
    (mu4e-drafts-folder     . "/imt/Drafts")
    (mu4e-trash-folder      . "/imt/Trash")
    (mu4e-refile-folder     . "/imt/Inbox")
    (smtpmail-smtp-user     . "ouail.derghal@imt-atlantique.fr")
    (user-mail-address      . "ouail.derghal@imt-atlantique.fr")
    (mu4e-compose-signature . "Ouail Derghal"))
  t)
#+end_src


