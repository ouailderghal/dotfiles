#+title: i3 Config
#+author: Ouail Derghal
#+property: header-args :tangle config.xyz
#+auto_tangle: t

* General
** Modifiers
*** Mod key
Set the modifier key as the =Windows= key. If you prefer to use the =Meta/Alt= key, modify the value of the variable to =Mod4=.

#+begin_src conf
set $mod Mod4
#+end_src

*** Floating modifier
Set the floating modifier used to drag floating windows to their wanted position.

#+begin_src conf
floating_modifier $mod
tiling_drag modifier titlebar
#+end_src

*** Vim keys
Vim keys for focus, movement, and resize directions.

# the arrows is not convenient
#+begin_src conf
set $up k
set $down j
set $left h
set $right l
#+end_src

** Font family
I prefer to use the patched version of =Ubuntu Mono= font with =Nerd= icons. You can obtain the font from the Nerd Fonts [[https://www.nerdfonts.com/font-downloads][download page]].

#+begin_src conf
font pango:UbuntuMono Nerd Font 10
#+end_src

* Startup
** Autostart XDG applications
Launch XDG autostart applications, enable =XSS lock= to secure the screen when the computer is in sleep mode, and activate the =NetworkManager applet= to monitor the network status.

#+begin_src conf
exec --no-startup-id dex --autostart --environment i3
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id nm-applet
#+end_src

** Custom startup applications
The following applications will automatically start when i3 starts up:
|----------------------+-----------------------------------------|
| Command              | Description                             |
|----------------------+-----------------------------------------|
| =nitrogen --restore= | Restore the most recent used wallpaper. |
| =emacs --daemon=     | Launch =emacs= in daemon mode.          |
|----------------------+-----------------------------------------|

#+begin_src conf
exec --no-startup-id nitrogen --restore
exec --no-startup-id emacs --daemon
#+end_src

* Keybindings
** Default bindings
*** pactl
Set keybindings to ajust volume using =pactl= in =PulseAudio=.

#+begin_src conf
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
#+end_src

*** Window managment
Set keybindings to change windows focus, move windows, change layouts and much more.

#+begin_src conf
# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Cycle recent workspaces
bindsym $mod+Tab workspace back_and_forth
#+end_src

*** Workspaces
Workspaces definition:

#+begin_src conf
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
#+end_src

Workspaces keybindings:

#+begin_src conf
# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
#+end_src
