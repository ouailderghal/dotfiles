#+AUTHOR: Ouail Derghal
#+STARTUP: fold

* Personal information
Setting up my personal information (full name, email and location).

#+begin_src emacs-lisp
  (setq user-full-name "Ouail Derghal"
        user-mail-address "ouail.derghal@univ-constantine2.dz"
        calendar-latitude 36.35
        calendar-longitude 6.6
        calendar-location-name "Constantine, Algeria")
#+end_src

* Use =defaults.el=
Load configuration from =default.el= file.

#+begin_src emacs-lisp
  (load-file "~/.emacs.d/defaults.el")
  (defaults/all-settings)
  (defaults/backup-to-tmp-directory)
#+end_src
  
* Interface configuration
** Font configuration
Make sure that you have [[https://archlinux.org/packages/community/any/ttf-inconsolata/][Inconsolata]] font installed on your system (I use Arch BTW!).

#+begin_src shell
  sudo pacman -S --noconfirm ttf-inconsolata
#+end_src


Define =font name=, =default size=, =current size= and =scale factor=.

#+begin_src emacs-lisp
  (setq od/default-fixed-font "Inconsolata")
  (setq od/default-fixed-font-size 130)
  (setq od/current-fixed-font-size od/default-fixed-font-size)
  (setq od/font-change-increment 1.1)
#+end_src

Set default values for =default= and =fixed-pitch= font family and size.

#+begin_src emacs-lisp
  (set-face-attribute 'default nil
                      :family od/default-fixed-font
                      :height od/default-fixed-font-size)

  (set-face-attribute 'fixed-pitch nil
                      :family od/default-fixed-font
                      :height od/default-fixed-font-size)
#+end_src

Helper functions to =set=, =increase=, =decrease= and =reset= font size.

#+begin_src emacs-lisp
  (defun od/set-font-size ()
    "Change default and fixed-pitch font sizes."
    (set-face-attribute 'default nil
                        :height od/current-fixed-font-size)
    (set-face-attribute 'fixed-pitch nil
                        :height od/current-fixed-font-size))

  (defun od/increase-font-size ()
    "Increase current font size by a factor."
    (interactive)
    (setq od/current-fixed-font-size
    (ceiling (* od/current-fixed-font-size od/font-change-increment)))
    (od/set-font-size))

  (defun od/decrease-font-size ()
    "Decrease current font size by a factor down to a min size of 1."
    (interactive)
    (setq od/current-fixed-font-size
    (max 1
         (floor (/ od/current-fixed-font-size od/font-change-increment))))
    (od/set-font-size))

  (defun od/reset-font-size ()
    "Reset font size to the default value."
    (interactive)
    (setq od/current-fixed-font-size od/default-fixed-font-size)
    (od/set-font-size))
#+end_src

Keyboard bindings to the previously-defined functions.

#+begin_src emacs-lisp
  (global-set-key (kbd "C-S-k") 'od/increase-font-size)
  (global-set-key (kbd "C-S-j") 'od/decrease-font-size)
  (global-set-key (kbd "C-=")   'od/reset-font-size)
#+end_src

** Themes
Install [[https://github.com/doomemacs/themes][doom-themes]] and set =doom-badger= as default theme.

#+begin_src emacs-lisp
  (use-package doom-themes
    :ensure t)

  (use-package zenburn-theme
    :ensure t
    :config
    (load-theme 'zenburn t))
#+end_src

** Line numbers
Disable line numbers in certain mode (=term-mode=, =dired=, ...).

#+begin_src emacs-lisp
  (require 'display-line-numbers)

  (defcustom display-line-numbers-exempt-modes 
    '(vterm-mode eshell-mode shell-mode term-mode ansi-term-mode dired-mode ranger-mode) 
    "Major modes on which to disable line numbers." 
    :group 'display-line-numbers 
    :type 'list 
    :version "green")

  (defun display-line-numbers--turn-on () 
    "Turn on line numbers except for certain major modes."
    (unless (or (minibufferp) 
                (member major-mode display-line-numbers-exempt-modes)) 
      (display-line-numbers-mode)))
#+end_src

Set line numbers type to =relative= and enable =display-line-numbers-mode= globally.

#+begin_src emacs-lisp
  (setq display-line-numbers-type 'relative)
  (global-display-line-numbers-mode 1)
#+end_src

* Org

Replace ellipsis symbol when subtree is folded.

#+begin_src emacs-lisp
  (setq org-ellipsis " â†´")
#+end_src

Setup TODO keywords.

#+begin_src emacs-lisp
  (setq org-todo-keywords
        '((sequence "TODO(t)" "WAITING(w)" "PAUSED(p)" "|" "DONE(d)" "CANCELED(c)")))
#+end_src

Insert a timestamp when a TODO item is marked as =CLOSED=.

#+begin_src emacs-lisp
  (setq org-log-done t)
#+end_src

Add Org files to =org-agenda= and set a keybinding.

#+begin_src emacs-lisp
  (setq org-agenda-files
        '("~/todo.org" "~/studies.org"))

  (global-set-key (kbd "C-c a") 'org-agenda)
#+end_src


** =org-superstar=
Install and enable [[https://github.com/integral-dw/org-superstar-mode][org-superstar]]. This plugin replaces =stars= with UTF-8 bullets in Org files.

#+begin_src emacs-lisp
  (use-package org-superstar
    :ensure t
    :config
    (add-hook 'org-mode-hook (lambda () (org-superstar-mode 1))))
#+end_src

* Ido
#+begin_src emacs-lisp
  (setq ido-enable-flex-matching t)
  (setq ido-everywhere t)
  (ido-mode 1)
#+end_src

Disable prompt when creating new buffers if the file name does not exist.

#+begin_src emacs-lisp
  (setq ido-create-new-buffer 'always)
#+end_src

Set file order in the Ido prompt based on file extension.

#+begin_src emacs-lisp
  (setq ido-file-extensions-order '(".org" ".el" ".md" ".txt"))
#+end_src

Ignore specific directories and files.

#+begin_src emacs-lisp
  (setq ido-ignore-files '(":w" ".projectile"))
  (setq ido-ignore-directories '(".git"))
#+end_src

Ignore specific file extensions.

#+begin_src emacs-lisp
  (setq ido-ignore-extensions t)
  (setq completion-ignored-extensions '(".o" ".l"))
#+end_src

* =evil=
Install and enable [[https://github.com/emacs-evil/evil][evil-mode]] globally.

#+begin_src emacs-lisp
  (use-package evil
        :ensure t
        :init (setq evil-want-C-i-jump nil)
        :config (evil-mode 1))
#+end_src

** =evil-surround=
Install and enable [[https://github.com/emacs-evil/evil-surround][evil-surround]] globally. This plugin allows you to change the surrounding of text objects.

#+begin_src emacs-lisp
  (use-package evil-surround
    :ensure t
    :config
    (global-evil-surround-mode 1))
#+end_src

** =evil-numbers=
Install [[https://github.com/cofi/evil-numbers][evil-numbers]] and configure bindings. This plugin allows you to increment numbers in text buffers. Keybingins are only available in =evil normal state=.

#+begin_src emacs-lisp
  (use-package 
    evil-numbers 
    :ensure t 
    :config
    (define-key evil-normal-state-map (kbd "C-c k") 'evil-numbers/inc-at-pt) 
    (define-key evil-normal-state-map (kbd "C-c j") 'evil-numbers/dec-at-pt))
#+end_src

* =engine=
Install =engine-mode= and configure keyboard binding. This plugin allows you to search in several engines from the comfort of Emacs.

#+begin_src emacs-lisp
  (use-package engine-mode
      :ensure t
      :config
      (engine-mode t))

    (engine/set-keymap-prefix (kbd "C-c s"))
#+end_src

Define search engines.
 #+begin_src emacs-lisp
   (defengine google
        "http://www.google.com/search?ie=utf-8&oe=utf-8&q=%s"
        :keybinding "g")

   (defengine duckduckgo
       "https://duckduckgo.com/?q=%s"
       :keybinding "d")

   (defengine wikipedia
       "http://www.wikipedia.org/search-redirect.php?language=en&go=Go&search=%s"
       :keybinding "w")

   (defengine scholar
       "https://scholar.google.com/scholar?hl=en&q=%s"
       :keybinding "s")

   (defengine google-images
       "http://www.google.com/images?hl=en&source=hp&biw=1440&bih=795&gbv=2&aq=f&aqi=&aql=&oq=&q=%s")

   (defengine github
       "https://github.com/search?ref=simplesearch&q=%s")

   (defengine youtube
       "http://www.youtube.com/results?aq=f&oq=&search_query=%s")
 #+end_src

* =ranger.el=
Install =ranger.el= file manager.

#+begin_src emacs-lisp
  (use-package ranger
    :ensure t)
#+end_src

* Projectile
#+begin_src emacs-lisp
  (use-package projectile
    :ensure t
    :config
    (define-key projectile-mode-map (kbd "C-x p") 'projectile-command-map)
    (projectile-mode +1))
#+end_src
* General configuration
#+begin_src emacs-lisp
  (setq-default tab-width 2)
  (setq-default indent-tabs-mode nil)
#+end_src

* Helper functions
** Open simple terminal
Helper functions to open the [[https://st.suckless.org/][simple terminal]] in default directory or in home directory. Make sure that you have [[http://st.suckless.org/patches/workingdir/][workingdir patch]] applied to your [[https://github.com/ouailderghal/st][st build]].

#+begin_src emacs-lisp
  (defun od/open-simple-terminal ()
    "Open simple terminal in home directory."
    (interactive)
    (shell-command "st -d ~"))

  (defun od/open-simple-terminal-here ()
    "Open simple terminal in current directory."
    (interactive)
    (shell-command (concat "st -d" default-directory)))
#+end_src

Binding the two helper functions.

#+begin_src emacs-lisp
  (global-set-key (kbd "<f1>") 'od/open-simple-terminal)
  (global-set-key (kbd "S-<f1>") 'od/open-simple-terminal-here)
#+end_src

