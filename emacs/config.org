#+TITLE: Emacs configuration file
#+AUTHOR: Ouail Derghal
#+STARTUP: overview

* MELPA
#+begin_src emacs-lisp
  (require 'package)
  (add-to-list 'package-archives '("gnu" . "https://elpa.gnu.org/packages/") t)
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)

  (when (not (package-installed-p 'use-package))
  (package-refresh-contents)
  (package-install 'use-package))
#+end_src

* Defaults
** Configuration file
#+begin_src emacs-lisp
  (setq emacs-config-file "~/.emacs.d/config.org")
  (global-set-key (kbd "<f12>") (lambda() (interactive) (find-file emacs-config-file)))
  (global-set-key (kbd "<f5>") (lambda() (interactive) (org-babel-load-file emacs-config-file)))
#+end_src

** Quiet startup
#+begin_src emacs-lisp
  (defun defaults/quiet-startup ()
  "Inhibit the startup message and clear scratch buffer."
  (setq inhibit-startup-message t)
  (setq initial-scratch-message nil))
#+end_src

** Clean startup
#+begin_src emacs-lisp
    (defun defaults/clean-startup ()
    "Remove toolbar, menubar and scrollbar and cursor blink"
    (tool-bar-mode -1)
    (menu-bar-mode -1)
    (scroll-bar-mode -1)
    (blink-cursor-mode -1)
  )
#+end_src

** Confirm closing Emacs
#+begin_src emacs-lisp
  (defun defaults/confirm-closing-emacs ()
    "Ask if syre that you want to close Eamcs."
    (setq confirm-kill-emacs 'y-or-n-p))
#+end_src

** Short yes-or-no
#+begin_src emacs-lisp
  (defun defaults/shorten-yes-or-no ()
  "`y/n?' instead of `yes/no?'."
  (fset 'yes-or-no-p 'y-or-n-p))
#+end_src

** No backup files
#+begin_src emacs-lisp
    (defun defaults/no-backup-files ()
    "Disable backup and autosave files"
    (setq make-backup-files nil)
    (setq auto-save-default nil))
#+end_src

** Apply default settings
#+begin_src emacs-lisp
  (defaults/quiet-startup)
  (defaults/clean-startup)
  (defaults/confirm-closing-emacs)
  (defaults/shorten-yes-or-no)
  (defaults/no-backup-files)
#+end_src

* Dired
#+begin_src emacs-lisp
  (use-package all-the-icons-dired
    :ensure t
    :config
    (add-hook 'dired-mode-hook 'all-the-icons-dired-mode))
#+end_src

* Interface customization
** Clean interface
#+begin_src emacs-lisp
  (defaults/quiet-startup)
  (defaults/clean-startup)
#+end_src

** Relative line numbers
#+begin_src emacs-lisp
  (setq display-line-numbers-type 'relative)
  (add-hook 'prog-mode-hook #'display-line-numbers-mode)
#+end_src

** Highlight current line
#+begin_src emacs-lisp
  (add-hook 'prog-mode-hook #'hl-line-mode)
  (add-hook 'text-mode-hook #'hl-line-mode)
#+end_src

** Font confguration
#+begin_src emacs-lisp
  (setq od/default-fixed-font "Ubuntu Mono")
  (setq od/default-fixed-font-size 115)
  (setq od/font-change-increment 1.1)
  (setq od/current-fixed-font-size od/default-fixed-font-size)
  
  (set-face-attribute 'default nil
		      :family od/default-fixed-font
		      :height od/default-fixed-font-size)

  (set-face-attribute 'fixed-pitch nil
		      :family od/default-fixed-font
		      :height od/default-fixed-font-size)
#+end_src

** Theme configuration
#+begin_src emacs-lisp
  (use-package doom-themes
    :ensure t
    :config
    (setq doom-themes-enable-bold t)
    (setq doom-themes-enable-italic t)
    (load-theme 'doom-zenburn t)
    (doom-themes-visual-bell-config)
    (doom-themes-org-config))
#+end_src

** DOOM modeline
#+begin_src emacs-lisp
  (use-package all-the-icons
    :ensure t)
#+end_src

#+begin_src emacs-lisp
  (use-package doom-modeline
    :ensure t
    :init
    (doom-modeline-mode 1))

  (display-battery-mode 1)
  
  (setq display-time-default-load-average nil)
  (display-time-mode 1)
#+end_src
